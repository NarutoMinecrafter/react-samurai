{"version":3,"sources":["HOC/WithAuthRederect.jsx","components/Profile/MyPost/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/MyPost/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPost/ProfileInfo/ProfileData.jsx","components/Profile/MyPost/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPost/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRederect","Component","connect","props","to","module","exports","Post","className","s","content","post","src","ava","message","likediv","like","MyPost","React","memo","postElement","posts","map","key","NewPostTextReactForm","onSubmit","value","addPost","textarea","maxLength10","maxLengthcreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","type","onClick","setTimeout","reset","MyPostContainer","profilePage","postData","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","Contacts","contact","contactValue","href","ProfileData","desc","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","isOwner","Object","keys","contacts","Input","ReduxProfileDatForm","error","er","errorForm","ProfileInfo","Preloader","cap","alt","user","photos","large","defaultAvatar","target","files","length","uploadPhoto","ProfileDataForm","formData","savePofileDescription","then","initialValues","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","getStatus","getProfile","refreshProfile","prevProps","mapDispatchToProps","compose","id","withRouter"],"mappings":"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","file":"static/js/3.2d5b5037.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst WithAuthRederect = (Component) => {\r\n    const RederectComponent = (props) => {\r\n    if (!props.isAuth) return <Redirect to='login' />\r\n    return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RederectComponent)\r\n\r\n}\r\n\r\nexport default WithAuthRederect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cap\":\"ProfileInfo_cap__oxYP0\",\"user\":\"ProfileInfo_user__YZABU\",\"ava\":\"ProfileInfo_ava__1YCnn\",\"desc\":\"ProfileInfo_desc__3G5Mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hYTW\",\"ava\":\"Post_ava__2iw_o\",\"like\":\"Post_like__3Z4h7\",\"likediv\":\"Post_likediv__3xntT\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.post}>\r\n                <img src={props.ava} className={s.ava}/>\r\n                {props.message}\r\n                <div className={s.likediv}>\r\n                    {props.like} <img src='https://www.pinclipart.com/picdir/big/539-5397235_got-it-thumbs-up-clipart.png' className={s.like}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthcreator, required } from '../../../utils/validator';\r\nimport { Textarea } from '../../common/FormsControl/FormsControl';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPost = React.memo((props) => {\r\n    let postElement = props.posts.map(post => <Post like={post.like} message={post.message} ava={post.ava} key={post} />)\r\n\r\n    let addPost = (value) => {\r\n        props.addPost(value.textarea)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <div>\r\n                    My post\r\n                </div>\r\n                <NewPostTextReactForm onSubmit={addPost} />\r\n                <div>\r\n                    New Post\r\n            </div>\r\n                {postElement}\r\n                <Post />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthcreator(10)\r\n\r\nconst NewPostTextForm = (props) => {\r\n    const reset = () => setTimeout(props.reset, 1)\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} placeholder='input post text...' name='textarea' validate={[required, maxLength10]} /></div>\r\n            <div>\r\n            <button type=\"submit\" onClick={reset}>add post</button>\r\n                \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostTextReactForm = reduxForm({form: 'NewPostText'})(NewPostTextForm)\r\n\r\nexport default MyPost;\r\n\r\n// ХэшРоутер","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPost from './MyPost';\r\n\r\nconst mapStateToProps = (state) => { \r\n    return {\r\n        posts: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (value) => {\r\n            dispatch(addPostActionCreator(value))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\n\r\nexport default MyPostContainer;\r\n\r\n// ХэшРоутер","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => setStatus(props.status), [props.status])\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = e => setStatus(e.currentTarget.value)\r\n\r\n    return(\r\n        <div>\r\n        {!editMode\r\n            ? <div><span onDoubleClick={() => setEditMode(true)} ><b>Status:</b> {props.status}</span></div>\r\n            : <div><input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deactivateEditMode} /></div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks ","import React from 'react'\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\nconst ProfileData = props => (\r\n    <div className={s.desc} >\r\n        <div>\r\n            <div>{props.profile.fullName}</div>\r\n            {props.status && <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />}\r\n            <br />\r\n            {props.profile.aboutMe && <div><b>Description:</b> {props.profile.aboutMe}</div>}\r\n            <br />\r\n            {props.profile.lookingForAJob ? <div><b>Looking for a job{props.profile.lookingForAJobDescription && ':'}</b> </div> : <div>Not looking for a job</div>}\r\n            <div>{props.profile.lookingForAJobDescription}</div>\r\n            <br/>\r\n            {props.isOwner && <button onClick={() => props.setEditMode(true)} >edit</button>}\r\n        </div>\r\n        <div>\r\n            <div><b>Contacts:</b></div>\r\n            <ul>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contacts key={key} contact={key} contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst Contacts = ({ contact, contactValue }) => contactValue && <li><a href={contactValue} >{contact}</a></li>\r\n\r\n\r\nexport default ProfileData","import s from './ProfileInfo.module.css';\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../../common/FormsControl/FormsControl';\r\nimport er from '../../../common/FormsControl/FormsControl.module.css'\r\n\r\nconst ProfileDatForm = ({profile, handleSubmit, setEditMode, error}) => <div>\r\n    <div><button onClick={() => setEditMode(false)} >Cancel</button></div>\r\n    {error && <div className={er.errorForm} >{error}</div>}\r\n    <form onSubmit={handleSubmit} >\r\n        <div className={s.desc} >\r\n            <div>\r\n                <div><Field component={Input} name='fullName' placeholder='Full Name' /></div>\r\n                <br />\r\n                <div><Field component={Textarea} name='aboutMe' placeholder='Description' /></div>\r\n                <br />\r\n                <div><Field component={Input} name='lookingForAJob' type='checkbox' />looking faor a job</div>\r\n                <div><Field component={Textarea} name='lookingForAJobDescription' \r\n                            placeholder='looking faor a job description' /></div>\r\n                <br/>\r\n            </div>\r\n            <div>\r\n                <div><b>Contacts:</b></div>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contacts key={key} contact={key} contactValue={profile.contacts[key]} />\r\n                    })}\r\n            </div>\r\n            <button >send</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\nconst Contacts = ({contact}) => <div><Field component={Input} name={`contacts.${contact}`} placeholder={contact} /></div>\r\n\r\nconst ReduxProfileDatForm = reduxForm({ form: 'profile-data'})(ProfileDatForm)\r\n\r\n\r\nexport default ReduxProfileDatForm","import React, { useState } from 'react';\r\nimport Preloader from '../../../common/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport defaultAvatar from '../../../img/userAvatar.jpg'\r\nimport ProfileData from './ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n// import cn from 'classnames';\r\n// <div className={cn(s.user, s.ban, s.lol)}></div>\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.savePofileDescription(formData).then(() => setEditMode(false))\r\n    }\r\n\r\n    let photoSelected = e => {\r\n        if (e.target.files.length) props.uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src='https://izobrazhenie.net/photo/0-0/2461_713574610.jpg' className={s.cap} alt='' />\r\n            <div className={s.user}>\r\n                <div className={s.ava} >\r\n                    <img src={props.profile.photos.large || defaultAvatar} alt='' />\r\n                    {props.isOwner && <input type='file' onChange={photoSelected} />}\r\n                </div>\r\n                {editMode   ? <ProfileDataForm profile={props.profile} setEditMode={setEditMode} onSubmit={onSubmit} initialValues={props.profile} /> \r\n                            : <ProfileData {...props} setEditMode={setEditMode} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\nimport ProfileInfo from './MyPost/ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = props => <div>\r\n            <ProfileInfo {...props} />\r\n            <MyPostContainer /> \r\n        </div>;\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux'\r\nimport { getProfile, getStatus, updateStatus, uploadPhoto, savePofileDescription } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport WithAuthRederect from '../../HOC/WithAuthRederect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n        }\r\n        this.props.getStatus(userId)\r\n        this.props.getProfile(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if ( this.props.match.params.userId !== prevProps.match.params.userId) this.refreshProfile()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Profile updateStatus={this.props.updateStatus} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                isOwner={!this.props.match.params.userId} \r\n                uploadPhoto={this.props.uploadPhoto}\r\n                savePofileDescription={this.props.savePofileDescription}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = ({getProfile, getStatus, updateStatus, uploadPhoto, savePofileDescription})\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, WithAuthRederect)(ProfileContainer)\r\n\r\n// withRouter"],"sourceRoot":""}