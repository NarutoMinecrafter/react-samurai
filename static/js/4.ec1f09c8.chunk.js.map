{"version":3,"sources":["HOC/WithAuthRederect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRederect","Component","connect","props","to","module","exports","Dialog","className","s","dialog","activ","src","ava","id","name","Message","message","sender","messege_text","addMessageForm","onSubmit","this","handleSubmit","Field","component","Dialogs","reduxForm","form","dialogElement","dialogData","map","key","messageElement","messageData","dialog_page","dialogs","messageField","messages","compose","messagePage","newMessageText","dispatch","addMessageCreator","addMessageActionCreator","updateNewMessageTextCreator","text","updateNewMessageTextActionCreator"],"mappings":"0GAAA,oCAIIA,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SAaRE,IAVU,SAACC,GAMtB,OAAOC,YAAQN,EAARM,EALmB,SAACC,GAC3B,OAAKA,EAAML,OACJ,kBAACG,EAAcE,GADI,kBAAC,IAAD,CAAUC,GAAG,e,oBCT3CC,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,MAAQ,uBAAuB,EAAI,mBAAmB,EAAI,mBAAmB,aAAe,gC,yKCgBtRC,EAbA,SAACJ,GACZ,OACI,yBAAKK,UAAWC,IAAEC,OAAS,IAAMP,EAAMQ,OACnC,6BACI,yBAAKC,IAAKT,EAAMU,OAEpB,6BACI,kBAAC,IAAD,CAAST,GAAI,aAAeD,EAAMW,IAAOX,EAAMY,SCChDC,EATC,SAACb,GACb,OACI,yBAAKK,UAAWC,IAAEQ,QAAU,IAAMd,EAAMe,QACpC,yBAAKN,IAAKT,EAAMU,MACfV,EAAMgB,eC8BbC,E,uKAEE,OACA,0BAAMC,SAAUC,KAAKnB,MAAMoB,cACvB,6BACI,kBAACC,EAAA,EAAD,CAAOT,KAAK,oBAAqBU,UAAU,cAE/C,6BACI,8C,GARaxB,aAiBdyB,GAFaC,YAAU,CAACC,KAAM,cAAjBD,CAAgCP,GA7C5C,SAACjB,GAEb,IAAI0B,EAAgB1B,EAAM2B,WAAWC,KAAK,SAAArB,GAAM,OAAI,kBAAC,EAAD,CAAQI,GAAIJ,EAAOI,GAAIC,KAAML,EAAOK,KAAMF,IAAKH,EAAOG,IAAKF,MAAOD,EAAOC,MAAQqB,IAAKtB,OAEtIuB,EAAiB9B,EAAM+B,YAAYH,KAAK,SAAAd,GAAO,OAAI,kBAAC,EAAD,CAASE,aAAcF,EAAQE,aAAcD,OAAQD,EAAQC,OAAQL,IAAKI,EAAQJ,IAAKmB,IAAKf,OAWnJ,OACI,yBAAKT,UAAWC,IAAE0B,aACd,yBAAK3B,UAAWC,IAAE2B,SACbP,GAEL,yBAAKrB,UAAWC,IAAE4B,cACd,yBAAK7B,UAAWC,IAAE6B,UACbL,GAEL,yCAAqBZ,SAAUlB,EAAMkB,eCNtCkB,sBAAQrC,aAlBC,SAACL,GACrB,MAAO,CACHiC,WAAYjC,EAAM2C,YAAYV,WAC9BI,YAAarC,EAAM2C,YAAYN,YAC/BO,eAAgB5C,EAAM2C,YAAYC,mBAGf,SAACC,GACxB,MAAO,CACHC,kBAAmB,WACfD,EAASE,gBAEbC,4BAA6B,SAACC,GAC1BJ,EAASK,YAAkCD,SAKc9C,IAAtDuC,CAAwEb","file":"static/js/4.ec1f09c8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst WithAuthRederect = (Component) => {\r\n    const RederectComponent = (props) => {\r\n    if (!props.isAuth) return <Redirect to='login' />\r\n    return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RederectComponent)\r\n\r\n}\r\n\r\nexport default WithAuthRederect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_page\":\"Dialogs_dialog_page__dM0jy\",\"dialogs\":\"Dialogs_dialogs__2jsAt\",\"dialog\":\"Dialogs_dialog__3JsFW\",\"message\":\"Dialogs_message__2B9TC\",\"messages\":\"Dialogs_messages__1ma1O\",\"activ\":\"Dialogs_activ__150-S\",\"u\":\"Dialogs_u__1rRYs\",\"i\":\"Dialogs_i__1PiY_\",\"messageField\":\"Dialogs_messageField__2cDcA\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from '.././Dialogs.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    return(\r\n        <div className={s.dialog + ' ' + props.activ} >\r\n            <div>\r\n                <img src={props.ava}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/messages/' + props.id}  >{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;\r\n\r\n// SOLID принципы","import React from 'react'\r\nimport s from '.././Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message + ' ' + props.sender } >\r\n            <img src={props.ava} /> \r\n            {props.messege_text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Dialog from './Dialog/Dialog'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport { Component } from 'react';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElement = props.dialogData.map (dialog => <Dialog id={dialog.id} name={dialog.name} ava={dialog.ava} activ={dialog.activ}  key={dialog} />)\r\n\r\n    let messageElement = props.messageData.map (message => <Message messege_text={message.messege_text} sender={message.sender} ava={message.ava} key={message} />)\r\n\r\n    let addMessage = () => {\r\n        props.addMessageCreator()\r\n    }\r\n\r\n    let onMessageChange = (event) => {\r\n        let text = event.target.value;\r\n        props.updateNewMessageTextCreator(text)\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialog_page} >\r\n            <div className={s.dialogs}>\r\n                {dialogElement}\r\n            </div>\r\n            <div className={s.messageField}>\r\n                <div className={s.messages} >\r\n                    {messageElement}\r\n                </div>\r\n                <addMessageReduxForm onSubmit={props.onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass addMessageForm extends Component {\r\n    render(){\r\n        return( \r\n        <form onSubmit={this.props.handleSubmit} >\r\n            <div>\r\n                <Field name='addNewMessageText'  component='textarea' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst addMessageReduxForm = reduxForm({form: 'AddMessage'})(addMessageForm)\r\n\r\nexport default Dialogs;","// import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport WithAuthRederect from '../../HOC/WithAuthRederect'\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/message-reducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogData: state.messagePage.dialogData,\r\n        messageData: state.messagePage.messageData,\r\n        newMessageText: state.messagePage.newMessageText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageCreator: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        updateNewMessageTextCreator: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRederect)(Dialogs)"],"sourceRoot":""}